#include<iostream>
#include<bits/stdc++.h>
using namespace std;
#define Max 50
int check[Max];
int a[Max][Max];
int n;

struct Stack{
	int top; // luu tong phan tu 
	int *node; // Luu danh sach cac phan tu
};

void Init_Stack(Stack *stack){
	stack = new Stack;
	stack->top = -1;
	stack->node = new int;
	return;
}

void Push_Stack(Stack *stack , int x){
	int *tmpNodes = new int [stack->top + 2];
	stack->top ++;
	for(int i = 0; i < stack->top; i++)
	{
		tmpNodes[i] = stack->node[i];
	}
	tmpNodes[stack->top] = x;
	delete [] stack->node;
	stack->node = tmpNodes;
	return;
}

int Pop_Stack(Stack *stack){
	int result = stack->node[stack->top];
	stack->top--;
	int *tmpNodes = new int[stack->top + 1];
	for(int i = 0; i <= stack->top; i++)
	{
		tmpNodes[i] = stack->node[i];
	}
	delete[] stack->node;
	stack->node = tmpNodes;
	return result;
}

void Init(){
	cout <<"Nhap so dinh n = ";
	cin >> n;
	cout <<"Nhap ma tran ke :" << endl;
	for(int i = 1; i <= n; i++){
		check[i] = 1;
		for(int j = 1; j <= n; j++){
			cin >> a[i][j];
		}
	}
}

void DFS(Stack *stack , int u){
	check[u] = 0;
	cout << u << " ";
	Push_Stack(stack,u);
	while(stack->top >= 0){
		int s = Pop_Stack(stack);
		for(int v = 1; v <= n; v++){
			if(check[v] == 1 && a[s][v] == 1){
				cout << v << " ";
				Push_Stack(stack,s);
				Push_Stack(stack,v);
				check[v] = 0;
				break;
			}
		}
	}
}
main(){
	Stack *stack = new Stack;
	stack->top = -1;
	stack->node = new int;
	//Init_Stack(stack);
	
	Init();
	DFS(stack,1);
    return 0;
}
